{"version":3,"sources":["WebFrame/link.png","QuestionBlock/AskingKey.js","QuestionBlock/AskingBlock.js","AskingBlocks/AskingBlocks.js","QuestionBlock/AnswerKey.js","QuestionBlock/AnswerBlock.js","AnswerBlocks/AnswerBlocks.js","WebFrame/WebFrame.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AskingKey","clickOnAnswer","key","_this","props","answerIndex","selectFunc","keyStyle","this","isCorrectAns","react_default","a","createElement","className","onClick","answerText","React","Component","AskingBlock","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","answerSelected","ans","setState","correctAns","parseInt","originalQuestion","JSON","parse","stringify","correct","updateAnswers","questionIndex","state","answerList","ansListFromJson","keys","i","length","push","QuestionBlock_AskingKey","question","style","paddingTop","myQuestions","AskingBlocks","jumpToAns","updateQuestionnaire","savedQuestionnaire","askPage","index","json","questionnaire","questions","blocks","questionTitle","QuestionBlock_AskingBlock","react_router","to","baseUrl","hellp","src","LinkImg","height","width","AnswerKey","console","log","keyBlockClass","AnswerBlock","diff","QuestionBlock_AnswerKey","isEmpty","obj","hasOwnProperty","AnswerBlocks","content","QuestionBlock_AnswerBlock","WebFrame","data","asking","src_AskingBlocks_AskingBlocks","answering","src_AnswerBlocks_AnswerBlocks","document","title","name","react_router_dom","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_WebFrame_WebFrame","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c99425c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/link.10d26fe4.png\";","import React from 'react';\nimport './QuestionBlock.css'\n\nclass AskingKey extends React.Component {\n    clickOnAnswer = () => {\n        let key = this.props.answerIndex;\n        this.props.selectFunc(key);\n    }\n    render() {\n        let keyStyle = 'key_block'\n        if(this.props.isCorrectAns){\n            keyStyle = 'correct_block'\n        }\n        return (\n            <div className={keyStyle} onClick={this.clickOnAnswer}>\n                {this.props.answerText}\n            </div>\n        );\n    }\n}\n\nexport default AskingKey;","import React from 'react';\nimport './QuestionBlock.css'\nimport AskingKey from './AskingKey';\n\n\nclass AskingBlock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            correctAns: -1\n        };\n    }\n\n    answerSelected = (ans) => {\n        //console.log(\"Question \" + this.props.questionIndex + \" answer is: \"+ ans);\n        this.setState({\n            correctAns: parseInt(ans),\n        })\n        let originalQuestion = JSON.parse(JSON.stringify(this.props));\n        originalQuestion.correct = parseInt(ans);\n        //console.log(originalQuestion);\n        this.props.updateAnswers(this.props.questionIndex, originalQuestion)\n    }\n\n    render() {\n        let answerList = []\n        let ansListFromJson = this.props.keys\n        for(let i = 0; i < ansListFromJson.length; i++){\n            let answerText = ansListFromJson[i]\n            if(i === this.state.correctAns) {\n                answerList.push(\n                    <AskingKey\n                        key={i}\n                        answerIndex={i}\n                        answerText={answerText}\n                        selectFunc={this.answerSelected}\n                        isCorrectAns={true}\n                    />\n                );\n            }\n            else{\n                answerList.push(\n                    <AskingKey\n                        key={i}\n                        answerIndex={i}\n                        answerText={answerText}\n                        selectFunc={this.answerSelected}\n                        isCorrectAns={false}\n                    />\n                );\n            }\n        }\n        return (\n            <div className=\"question_block\">\n                <b>{this.props.question}</b>\n                <div style={{paddingTop:10}}>\n                    {answerList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AskingBlock;","import React from 'react';\nimport AskingBlock from \"../QuestionBlock/AskingBlock\";\nimport LinkImg from '../WebFrame/link.png'\nimport '../WebFrame/WebFrame.css';\nimport {Redirect} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nconst myQuestions = [\n    {\n        \"question\": \"What is your favorite Linux brand?\",\n        \"keys\": [\n            \"Kali\",\n            \"CentOS\",\n            \"Ubuntu\",\n            \"RedHat\",\n            \"Fedora\",\n            \"Arch\",\n        ]\n    },\n    {\n        \"question\": \"What is your favorite Linux command?\",\n        \"keys\": [\n            \"pwd\",\n            \"cd\",\n            \"mkdir\",\n            \"rm\",\n            \"ls\",\n            \"kill\",\n            \"sudo\",\n            \"echo\",\n        ]\n    },\n    {\n        \"question\": \"What is your favorite data structure?\",\n        \"keys\": [\n            \"Hash table\",\n            \"Binary Search Tree\",\n            \"Heap(Priority Queue)\",\n            \"Stack\",\n            \"Linked List\",\n            \"Trie\",\n            \"Queue\"\n        ]\n    },\n    {\n        \"question\": \"What is your favorite database system?\",\n        \"keys\": [\n            \"MySQL\",\n            \"postgreSQL\",\n            \"SQLite\",\n            \"MongoDB\",\n            \"Cassandra\",\n            \"Microsoft Access\",\n        ]\n    },\n    {\n        \"question\": \"What is your favorite imperative programming language?\",\n        \"keys\": [\n            \"Java\",\n            \"JavaScript\",\n            \"C++\",\n            \"C\",\n            \"Python2\",\n            \"Python3\",\n            \"C#\",\n        ]\n    },\n    {\n        \"question\": \"What is your favorite non imperative programming language?\",\n        \"keys\": [\n            \"Haskell\",\n            \"Prolog\",\n            \"Lisp\",\n            \"Clojure\",\n            \"Erlang\",\n            \"R\",\n            \"Scheme\",\n            \"OCaml\",\n            \"Scala\",\n        ]\n    },\n    {\n        \"question\": \"What is your most admired scientist?\",\n        \"keys\": [\n            \"Ada Lovelace\",\n            \"Alan Turing\",\n            \"Edsger Dijkstra\",\n            \"Claude Shannon\",\n            \"Grace Hopper\",\n            \"James Gosling\",\n            \"Guido van Rossum\",\n            \"John von Neumann\"\n        ]\n    },\n    {\n        \"question\": \"What is your favorite text editor?\",\n        \"keys\": [\n            \"Sublime\",\n            \"Brackets\",\n            \"XCode\",\n            \"Visual Studio\",\n            \"Vim\",\n            \"Emacs\",\n            \"Eclipse\",\n            \"JetBrain Series\"\n        ]\n    },\n    {\n        \"question\": \"What is your favorite entertainment website?\",\n        \"keys\": [\n            \"Stack Overflow\",\n            \"Github\",\n            \"Reddit\",\n            \"MDN\",\n            \"nyu.edu\",\n        ]\n    },\n]\n\nclass AskingBlocks extends React.Component {\n    constructor(props) {\n        super(props);\n        let savedQuestionnaire = []\n        for(let i = 0; i < myQuestions.length; i++){\n            savedQuestionnaire.push({});\n        }\n        this.state = {\n            askPage: true,\n            savedQuestionnaire: savedQuestionnaire\n        };\n    }\n    jumpToAns = () => {\n        this.props.updateQuestionnaire(this.state.savedQuestionnaire)\n        this.setState({\n            askPage: false\n        })\n    }\n    updateAnswers = (index, json) => {\n        let questionnaire = this.state.savedQuestionnaire;\n        questionnaire[index] = json;\n        this.setState({\n            savedQuestionnaire: questionnaire\n        });\n    }\n    render() {\n        let questions = myQuestions;\n        let blocks = []\n        for(let i = 0; i < questions.length; i++) {\n            let questionTitle = \"Question \" + i + ': ' + questions[i].question\n            blocks.push(\n                <AskingBlock\n                    key={i}\n                    questionIndex={i}\n                    question={questionTitle}\n                    keys={questions[i].keys}\n                    updateAnswers={this.updateAnswers}\n                />);\n        }\n        const baseUrl = process.env.PUBLIC_URL;\n        return (\n            <div>\n                <div>{blocks}</div>\n\n                    <div className='custom_button' onClick={this.jumpToAns}>\n                        Generate my link\n                    </div>\n                    {this.state.askPage ? null:<Redirect to={baseUrl + '/ans'} hellp='itsme'/>}\n\n                <div className='link_ico' >\n                    <img src={LinkImg} style={{height:'70px', width:'auto'}}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AskingBlocks;","import React from 'react';\nimport './QuestionBlock.css'\n\nclass AnswerKey extends React.Component {\n    constructor(props) {\n        super(props);\n        // Don't call this.setState() here!\n        this.state = {\n            keyBlockClass: 'key_block'\n        };\n    }\n\n    clickOnAnswer = () => {\n        let key = this.props.answerIndex;\n        if(this.props.selectFunc(key)){\n            console.log(\"this is answer key and I am correct\")\n            this.setState({\n                keyBlockClass: 'correct_block'\n            });\n        }\n        else{\n            this.setState({\n                keyBlockClass: 'wrong_block'\n            });\n        }\n    }\n    render() {\n        return (\n            <div className={this.state.keyBlockClass} onClick={this.clickOnAnswer}>\n                {this.props.answerText}\n            </div>\n        );\n    }\n}\n\nexport default AnswerKey;","import React from 'react';\nimport './QuestionBlock.css'\nimport AnswerKey from \"./AnswerKey\";\n\nclass AnswerBlock extends React.Component {\n    answerSelected = (ans) => {\n        let diff = parseInt(ans) - parseInt(this.props.correctAns)\n        if(diff <= 0.5 && diff >= -0.5){\n            return true;\n        }\n        return false;\n    }\n    render() {\n        let answerList = []\n        let ansListFromJson = this.props.keys\n\n        for(let i = 0; i < ansListFromJson.length; i++){\n            let answerText = ansListFromJson[i]\n            answerList.push(\n                <AnswerKey\n                    key={i}\n                    answerIndex={i}\n                    answerText={answerText}\n                    selectFunc = {this.answerSelected}\n                />\n            );\n        }\n        return (\n            <div className=\"question_block\">\n                <b>{this.props.question}</b>\n                <div style={{paddingTop:10}}>\n                    {answerList}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AnswerBlock;","import React from 'react';\nimport AnswerBlock from \"../QuestionBlock/AnswerBlock\";\n\nfunction isEmpty(obj) {\n    for(let key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nclass AnswerBlocks extends React.Component {\n\n    render() {\n        let questions = this.props.content;\n\n        let blocks = []\n        for(let i = 0; i < questions.length; i++) {\n            console.log(questions[i])\n            if(!isEmpty(questions[i])) {\n                let questionTitle = questions[i].question\n                blocks.push(\n                    <AnswerBlock\n                        key={i}\n                        questionIndex={i}\n                        question={questionTitle}\n                        keys={questions[i].keys}\n                        correctAns={questions[i].correct}\n                    />);\n            }\n        }\n        return (\n            <div>{blocks}</div>\n        );\n    }\n}\n\nexport default AnswerBlocks;","import React from 'react';\nimport './WebFrame.css';\nimport '../QuestionBlock/AskingBlock';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport AskingBlocks from '../AskingBlocks/AskingBlocks';\nimport AnswerBlocks from '../AnswerBlocks/AnswerBlocks';\n\n\nclass WebFrame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedQuestionnaire: []\n        };\n    }\n\n    componentDidMount() {\n        document.title = \"Geeks Ask\";\n    }\n\n    updateQuestionnaire = (data) => {\n        this.setState({\n            savedQuestionnaire: data\n        })\n    }\n\n    asking = () => {\n        return (\n            <div>\n                <AskingBlocks updateQuestionnaire={this.updateQuestionnaire}/>\n            </div>\n        );\n    }\n\n    answering = () => {\n        return (\n            <div>\n                <AnswerBlocks content={this.state.savedQuestionnaire}/>\n            </div>\n        );\n    }\n\n    render() {\n        const baseUrl = process.env.PUBLIC_URL;\n        return (\n            <div name='layout'>\n                <div className='header_bar'>\n                    Geeks ask\n                </div>\n                <div className='content_area'>\n                    <Router>\n                        <div>\n                            <Route path={baseUrl +'/'} exact component={this.asking}/>\n                            <Route path={baseUrl +'/ask'} exact component={this.asking}/>\n                            <Route path={baseUrl +'/ans/:questionnaireId'} exact component={this.answering}/>\n                            <Route path={baseUrl +'/ans'} exact component={this.answering} />\n                        </div>\n                    </Router>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WebFrame;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebFrame from './WebFrame/WebFrame';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WebFrame />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}